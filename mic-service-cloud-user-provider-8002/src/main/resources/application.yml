server:
  port: 8002

eureka:
  client:
    service-url:
       defaultZone: http://eureka9000.com:9000/eureka,http://eureka9001.com:9001/eureka,http://eureka9002.com:9002/eureka
  healthcheck:
     enabled: true
  instance:
    prefer-ip-address: true    # eureka 上显示ip
    instance-id:  ${spring.application.name}:${server.port}
    lease-renewal-interval-in-seconds: 40 #注册心跳时间
    lease-expiration-duration-in-seconds: 15  #多久没有接受到心跳则移除


info:
  app.name: ${spring.application.name}
  company.name: www.chenhaijun.com
  build.artifactId: mic-service-cloud-user-comsumer-8000
  build.version: 0.0.1-SNAPSHOT

debug: true

logging:
    level:
      root: debug
      com.seven.chenhaijun.mapper: debug

spring:
  application:
    name: mic-user-provider
  datasource:
      driver_class_namel: com.mysql.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource
      url: jdbc:mysql://localhost:3306/test?characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
      username: root
      password: 123456

      # 初始化大小，最小，最大
      initial-size: 1
      max-active: 20
      min-idle: 3
      #最大连接等待超时时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validationQuery: select 1 from dual
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true

#mybatis:
#  type-aliases-package: com.seven.chenhaijun.entity
#  mapper-locations: classpath:mapper/*.xml

mybatis-plus:
  #config-location: classpath:mybatis-cfg.xml    #mybatis 配置文件 此配置 不能跟Mybatis 同时配置
  mapper-locations: classpath*:mapper/*.xml    #自定义sql对应mapper位置
  type-aliases-package: com.seven.chenhaijun.entity      #对象实体
  type-aliases-super-type: java.lang.Object
  check-config-location: false       #启动时是否检查 MyBatis XML 文件的存在
  #type-handlers-package: com.baomidou.mybatisplus.samples.quickstart.handler  #自定义类型转换
  #configuration-properties: classpath:mybatis/config.properties  指定外部化 MyBatis Properties 配置，通过该配置可以抽离配置，实现不同环境的配置部署。

  configuration:   #mybatis 原生配置
    map-underscore-to-camel-case: true  #驼峰法
    autoMappingBehavior: partial             # MyBatis 自动映射策略 1.AutoMappingBehavior.NONE：不启用自动映射 2.只对非嵌套的 resultMap 进行自动映射 3.对所有的 resultMap 都进行自动映射
    autoMappingUnknownColumnBehavior: none  # MyBatis 自动映射时未知列或未知属性处理策略 1.NONE：不做任何处理 (默认值)  2.WARNING：以日志的形式打印相关警告信息 3.FAILING：当作映射失败处理，并抛出异常和详细信息
    cacheEnabled: true  # 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认为 true。
    call-setters-on-nulls: false #指定当结果集中值为 null 的时候是否调用映射对象的 Setter（Map 对象时为 put）方法
  global-config:  #mybatis 全局配置
    refresh: true # 是否开启热加载 默认不自动刷新
    sqlParserCache: true #是否缓存sql解析 默认不缓存
    capitalMode: #DB策略
      capitalMode: false #开启大写命名
      columnLike: fasle #是否开启 LIKE 查询
      dbType: mysql #数据库类型
      idType: AUTO   # 配置了 但是不生效 不知道为啥全局主键策略 1.AUTO 数据库ID自增 2.INPUT 用户输入ID 3.ID_WORKER 全局唯一ID，Long类型的主键  4.ID_WORKER_STR 字符串全局唯一ID 5.UUID 全局唯一ID，UUID类型的主键 6.NONE 该类型为未设置主键类型
      logicDeleteValue: 1  #逻辑删除 逻辑删除的字段需要注解 @TableLogic
      logicNotDeleteValue: 0 #逻辑未删除值
      #tablePrefix
      #tableUnderline

